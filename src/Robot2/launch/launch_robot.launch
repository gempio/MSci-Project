<launch>
  
 <node pkg="amcl" type="amcl" name="amcl">

  <param name="base_frame" value = "base_link"/>
  <param name="fixed_frame" value = "map"/>
  <param name="use_cloud_input" value="true"/>
  <param name="use_laser_input" value="true"/>
  <param name="publish_tf" value="true"/>
  <param name="publish_odom" value="true"/>
  <param name="use_odom" value="false"/>
  <param name="use_imu" value="false"/>
  <param name="use_alpha_beta" value="true"/>
  <param name="max_iterations" value="10"/>

</node>

<node name="map_server2" pkg="map_server" type="map_server" args="/home/maciejm/catkin_ws/src/map1.yaml"/>


  <node pkg="robot1_tf" type="my_sensor" name="my_sensor" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="robot1_tf" type="laser_cloud" name="laser_cloud" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="robot1_tf" type="my_odom" name="my_odom" output="screen">
    <param name="odom_param" value="param_value" />
  </node>

  <node pkg="robot1_tf" type="tf_broadcaster" name="broadcaster2" output="screen">
    <param name="broadcaster" value="param_value" />
  </node>

  <node pkg="robot1_tf" type="tf_listener" name="listener" output="screen">
    <param name="listener" value="param_value" />
  </node>

<node pkg="robot1_tf" type="pose_publisher" name="pose_publisher" output="screen">
    <param name="pose_publisher" value="param_value" />
  </node>

  <node type="laser_scan_assembler" pkg="laser_assembler" name="my_assembler">
    <remap from="scan" to="tilt_scan"/>
    <param name="max_scans" type="int" value="400" />
    <param name="fixed_frame" type="string" value="base_link" />
  </node>

  <node type="point_cloud_assembler" pkg="laser_assembler" name="my_assembler2">
    <remap from="cloud" to="my_cloud_in"/>
    <param name="max_clouds" type="int" value="400" />
    <param name="fixed_frame" type="string" value="base_link" />
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base">
    <rosparam file="$(find robot1)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robot1)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find robot1)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot1)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot1)/base_local_planner_params.yaml" command="load" />
    
  </node>




  <group ns="robot2">
    <param name="tf_prefix" value="robot2"/>
    <node name="map_server" pkg="map_server" type="map_server" args="/home/maciejm/catkin_ws/src/map1.yaml"/>
    <node pkg="amcl" type="amcl" name="amcl2">

      <param name="base_frame" value = "base_link"/>
      <param name="fixed_frame" value = "map"/>
      <param name="use_cloud_input" value="true"/>
      <param name="use_laser_input" value="true"/>
      <param name="publish_tf" value="true"/>
      <param name="publish_odom" value="true"/>
      <param name="use_odom" value="false"/>
      <param name="use_imu" value="false"/>
      <param name="use_alpha_beta" value="true"/>
      <param name="max_iterations" value="10"/>
    </node>

  <node pkg="robot2_tf" type="my_sensor2" name="my_sensor2"  args="2" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="laser_cloud2" name="laser_cloud2" args="2" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="my_odom2" name="my_odom2" args="2" output="screen">
    <param name="odom_param" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="tf_broadcaster2" name="broadcaster2" args="2" output="screen">
    <param name="broadcaster" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="tf_listener2" name="listener2" args="2" output="screen">
    <param name="listener" value="param_value" />
  </node>

<node pkg="robot2_tf" type="pose_publisher2" name="pose_publisher2" args="2" output="screen">
    <param name="pose_publisher" value="param_value" />
  </node>

  <node type="laser_scan_assembler" pkg="laser_assembler" args="2" name="my_assembler3">
    <remap from="scan2" to="tilt_scan"/>
    <param name="max_scans" type="int" value="400" />
    <param name="fixed_frame" type="string" value="base_link2" />
  </node>

  <node type="point_cloud_assembler" pkg="laser_assembler" args="2" name="my_assembler4">
    <remap from="cloud" to="my_cloud_in"/>
    <param name="max_clouds" type="int" value="400" />
    <param name="fixed_frame" type="string" value="base_link2" />
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base">
    <rosparam file="$(find robot2)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robot2)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find robot2)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot2)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot2)/base_local_planner_params.yaml" command="load" />
    
  </node>
</group>

<group ns="robot3">
    <param name="tf_prefix" value="robot3"/>
    <node name="map_server" pkg="map_server" type="map_server" args="/home/maciejm/catkin_ws/src/map1.yaml"/>
    <node pkg="amcl" type="amcl" name="amcl3">

      <param name="base_frame" value = "base_link"/>
      <param name="fixed_frame" value = "map"/>
      <param name="use_cloud_input" value="true"/>
      <param name="use_laser_input" value="true"/>
      <param name="publish_tf" value="true"/>
      <param name="publish_odom" value="true"/>
      <param name="use_odom" value="false"/>
      <param name="use_imu" value="false"/>
      <param name="use_alpha_beta" value="true"/>
      <param name="max_iterations" value="10"/>
    </node>

  <node pkg="robot2_tf" type="my_sensor2" name="my_sensor3"  args="3" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="laser_cloud2" name="laser_cloud3" args="3" output="screen">
    <param name="sensor_param" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="my_odom2" name="my_odom3" args="3" output="screen">
    <param name="odom_param" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="tf_broadcaster2" name="broadcaster3" args="3" output="screen">
    <param name="broadcaster" value="param_value" />
  </node>

  <node pkg="robot2_tf" type="tf_listener2" name="listener3" args="3" output="screen">
    <param name="listener" value="param_value" />
  </node>

<node pkg="robot2_tf" type="pose_publisher3" name="pose_publisher2" args="3" output="screen">
    <param name="pose_publisher" value="param_value" />
  </node>

  <node type="laser_scan_assembler" pkg="laser_assembler" args="3" name="my_assembler5">
    <remap from="scan2" to="tilt_scan"/>
    <param name="max_scans" type="int" value="400" />
    <param name="fixed_frame" type="string" value="base_link2" />
  </node>

  <node type="point_cloud_assembler" pkg="laser_assembler" args="3" name="my_assembler6">
    <remap from="cloud" to="my_cloud_in"/>
    <param name="max_clouds" type="int" value="400" />
    <param name="fixed_frame" type="string" value="base_link2" />
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base">
    <rosparam file="$(find robot2)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robot2)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find robot2)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot2)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find robot2)/base_local_planner_params.yaml" command="load" />
    
  </node>
</group>

<node pkg="rviz" type="rviz" name="rviz2" output="screen">
    <param name="rviz" value="param_value" />
  </node>

  <node pkg="controller" type="serverToController" name="sTc" />
  <node pkg="controller" type="controller" name="cntrl" />
  
</launch>
